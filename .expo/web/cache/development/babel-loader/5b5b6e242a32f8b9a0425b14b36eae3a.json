{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useRoute } from '@react-navigation/native';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport albumDetails from \"../data/albumDetails\";\nimport { getAlbum } from \"../src/graphql/queries\";\n\nvar AlbumScreen = function AlbumScreen() {\n  var route = useRoute();\n  var albumId = route.params.id;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      album = _useState2[0],\n      setAlbum = _useState2[1];\n\n  useEffect(function () {\n    var fetchAlbumDetails = function fetchAlbumDetails() {\n      var data;\n      return _regeneratorRuntime.async(function fetchAlbumDetails$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getAlbum, {\n                id: albumId\n              })));\n\n            case 3:\n              data = _context.sent;\n              setAlbum(data.data.getAlbum);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    fetchAlbumDetails();\n  }, []);\n\n  if (!album) {\n    return React.createElement(Text, null, \"Loading...\");\n  }\n\n  return React.createElement(View, null, React.createElement(FlatList, {\n    data: album.songs.items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(SongListItem, {\n        song: item\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(AlbumHeader, {\n        album: album\n      });\n    }\n  }));\n};\n\nexport default AlbumScreen;","map":{"version":3,"sources":["C:/Users/Jaylord Rueda/Desktop/React Apps/Where's My Earphone/screens/album.js"],"names":["React","useEffect","useState","useRoute","API","graphqlOperation","albumDetails","getAlbum","AlbumScreen","route","albumId","params","id","album","setAlbum","fetchAlbumDetails","graphql","data","console","log","songs","items","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AAEA,OAAOC,YAAP;AACA,SAASC,QAAT;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,MAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,MAAMO,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;;AAEA,kBAA0BV,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEHX,GAAG,CAACY,OAAJ,CAAYX,gBAAgB,CAACE,QAAD,EAAW;AAAEK,gBAAAA,EAAE,EAAEF;AAAN,eAAX,CAA5B,CAFG;;AAAA;AAEhBO,cAAAA,IAFgB;AAGtBH,cAAAA,QAAQ,CAACG,IAAI,CAACA,IAAL,CAAUV,QAAX,CAAR;AAHsB;AAAA;;AAAA;AAAA;AAAA;AAKtBW,cAAAA,OAAO,CAACC,GAAR;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B;;AASAJ,IAAAA,iBAAiB;AAClB,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO,oBAAC,IAAD,qBAAP;AACD;;AAED,SACE,oBAAC,IAAD,QACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACO,KAAN,CAAYC,KADpB;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAEA;AAApB,QAAd;AAAA,KAFd;AAGE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAI,CAACV,EAAf;AAAA,KAHhB;AAIE,IAAA,mBAAmB,EAAE;AAAA,aAAM,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEC;AAApB,QAAN;AAAA;AAJvB,IADF,CADF;AAUD,CAlCD;;AAoCA,eAAeL,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { View, Text, FlatList } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\nimport albumDetails from '../data/albumDetails';\r\nimport { getAlbum } from '../src/graphql/queries';\r\n\r\nconst AlbumScreen = () => {\r\n\r\n  const route = useRoute();\r\n  const albumId = route.params.id;\r\n\r\n  const [album, setAlbum] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchAlbumDetails = async () => {\r\n      try {\r\n        const data = await API.graphql(graphqlOperation(getAlbum, { id: albumId }))\r\n        setAlbum(data.data.getAlbum)\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    fetchAlbumDetails();\r\n  }, [])\r\n\r\n  if (!album) {\r\n    return <Text>Loading...</Text>\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={album.songs.items}\r\n        renderItem={({ item }) => <SongListItem song={item} />}\r\n        keyExtractor={(item) => item.id}\r\n        ListHeaderComponent={() => <AlbumHeader album={album} />}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AlbumScreen;\r\n"]},"metadata":{},"sourceType":"module"}